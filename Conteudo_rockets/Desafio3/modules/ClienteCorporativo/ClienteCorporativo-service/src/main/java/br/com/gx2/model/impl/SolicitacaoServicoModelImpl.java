/**
 * SPDX-FileCopyrightText: (c) 2024 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.gx2.model.impl;

import br.com.gx2.model.SolicitacaoServico;
import br.com.gx2.model.SolicitacaoServicoModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the SolicitacaoServico service. Represents a row in the &quot;Ccorp_SolicitacaoServico&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>SolicitacaoServicoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SolicitacaoServicoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SolicitacaoServicoImpl
 * @generated
 */
@JSON(strict = true)
public class SolicitacaoServicoModelImpl
	extends BaseModelImpl<SolicitacaoServico>
	implements SolicitacaoServicoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a solicitacao servico model instance should use the <code>SolicitacaoServico</code> interface instead.
	 */
	public static final String TABLE_NAME = "Ccorp_SolicitacaoServico";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"solicitacaoId", Types.BIGINT},
		{"codigoUnimed", Types.VARCHAR}, {"descricao", Types.VARCHAR},
		{"dataSolicitacao", Types.TIMESTAMP}, {"status", Types.INTEGER},
		{"prioridade", Types.INTEGER}, {"clientePJId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("solicitacaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("codigoUnimed", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descricao", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataSolicitacao", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("prioridade", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("clientePJId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Ccorp_SolicitacaoServico (uuid_ VARCHAR(75) null,solicitacaoId LONG not null primary key,codigoUnimed VARCHAR(75) null,descricao VARCHAR(75) null,dataSolicitacao DATE null,status INTEGER,prioridade INTEGER,clientePJId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table Ccorp_SolicitacaoServico";

	public static final String ORDER_BY_JPQL =
		" ORDER BY solicitacaoServico.solicitacaoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Ccorp_SolicitacaoServico.solicitacaoId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CLIENTEPJID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SOLICITACAOID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public SolicitacaoServicoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _solicitacaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSolicitacaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _solicitacaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SolicitacaoServico.class;
	}

	@Override
	public String getModelClassName() {
		return SolicitacaoServico.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<SolicitacaoServico, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<SolicitacaoServico, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SolicitacaoServico, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((SolicitacaoServico)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<SolicitacaoServico, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<SolicitacaoServico, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(SolicitacaoServico)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<SolicitacaoServico, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<SolicitacaoServico, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<SolicitacaoServico, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<SolicitacaoServico, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<SolicitacaoServico, Object>>();

			attributeGetterFunctions.put("uuid", SolicitacaoServico::getUuid);
			attributeGetterFunctions.put(
				"solicitacaoId", SolicitacaoServico::getSolicitacaoId);
			attributeGetterFunctions.put(
				"codigoUnimed", SolicitacaoServico::getCodigoUnimed);
			attributeGetterFunctions.put(
				"descricao", SolicitacaoServico::getDescricao);
			attributeGetterFunctions.put(
				"dataSolicitacao", SolicitacaoServico::getDataSolicitacao);
			attributeGetterFunctions.put(
				"status", SolicitacaoServico::getStatus);
			attributeGetterFunctions.put(
				"prioridade", SolicitacaoServico::getPrioridade);
			attributeGetterFunctions.put(
				"clientePJId", SolicitacaoServico::getClientePJId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<SolicitacaoServico, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<SolicitacaoServico, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<SolicitacaoServico, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<SolicitacaoServico, String>)
					SolicitacaoServico::setUuid);
			attributeSetterBiConsumers.put(
				"solicitacaoId",
				(BiConsumer<SolicitacaoServico, Long>)
					SolicitacaoServico::setSolicitacaoId);
			attributeSetterBiConsumers.put(
				"codigoUnimed",
				(BiConsumer<SolicitacaoServico, String>)
					SolicitacaoServico::setCodigoUnimed);
			attributeSetterBiConsumers.put(
				"descricao",
				(BiConsumer<SolicitacaoServico, String>)
					SolicitacaoServico::setDescricao);
			attributeSetterBiConsumers.put(
				"dataSolicitacao",
				(BiConsumer<SolicitacaoServico, Date>)
					SolicitacaoServico::setDataSolicitacao);
			attributeSetterBiConsumers.put(
				"status",
				(BiConsumer<SolicitacaoServico, Integer>)
					SolicitacaoServico::setStatus);
			attributeSetterBiConsumers.put(
				"prioridade",
				(BiConsumer<SolicitacaoServico, Integer>)
					SolicitacaoServico::setPrioridade);
			attributeSetterBiConsumers.put(
				"clientePJId",
				(BiConsumer<SolicitacaoServico, Long>)
					SolicitacaoServico::setClientePJId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getSolicitacaoId() {
		return _solicitacaoId;
	}

	@Override
	public void setSolicitacaoId(long solicitacaoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_solicitacaoId = solicitacaoId;
	}

	@JSON
	@Override
	public String getCodigoUnimed() {
		if (_codigoUnimed == null) {
			return "";
		}
		else {
			return _codigoUnimed;
		}
	}

	@Override
	public void setCodigoUnimed(String codigoUnimed) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_codigoUnimed = codigoUnimed;
	}

	@JSON
	@Override
	public String getDescricao() {
		if (_descricao == null) {
			return "";
		}
		else {
			return _descricao;
		}
	}

	@Override
	public void setDescricao(String descricao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descricao = descricao;
	}

	@JSON
	@Override
	public Date getDataSolicitacao() {
		return _dataSolicitacao;
	}

	@Override
	public void setDataSolicitacao(Date dataSolicitacao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataSolicitacao = dataSolicitacao;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public int getPrioridade() {
		return _prioridade;
	}

	@Override
	public void setPrioridade(int prioridade) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prioridade = prioridade;
	}

	@JSON
	@Override
	public long getClientePJId() {
		return _clientePJId;
	}

	@Override
	public void setClientePJId(long clientePJId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_clientePJId = clientePJId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalClientePJId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("clientePJId"));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, SolicitacaoServico.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SolicitacaoServico toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, SolicitacaoServico>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SolicitacaoServicoImpl solicitacaoServicoImpl =
			new SolicitacaoServicoImpl();

		solicitacaoServicoImpl.setUuid(getUuid());
		solicitacaoServicoImpl.setSolicitacaoId(getSolicitacaoId());
		solicitacaoServicoImpl.setCodigoUnimed(getCodigoUnimed());
		solicitacaoServicoImpl.setDescricao(getDescricao());
		solicitacaoServicoImpl.setDataSolicitacao(getDataSolicitacao());
		solicitacaoServicoImpl.setStatus(getStatus());
		solicitacaoServicoImpl.setPrioridade(getPrioridade());
		solicitacaoServicoImpl.setClientePJId(getClientePJId());

		solicitacaoServicoImpl.resetOriginalValues();

		return solicitacaoServicoImpl;
	}

	@Override
	public SolicitacaoServico cloneWithOriginalValues() {
		SolicitacaoServicoImpl solicitacaoServicoImpl =
			new SolicitacaoServicoImpl();

		solicitacaoServicoImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		solicitacaoServicoImpl.setSolicitacaoId(
			this.<Long>getColumnOriginalValue("solicitacaoId"));
		solicitacaoServicoImpl.setCodigoUnimed(
			this.<String>getColumnOriginalValue("codigoUnimed"));
		solicitacaoServicoImpl.setDescricao(
			this.<String>getColumnOriginalValue("descricao"));
		solicitacaoServicoImpl.setDataSolicitacao(
			this.<Date>getColumnOriginalValue("dataSolicitacao"));
		solicitacaoServicoImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		solicitacaoServicoImpl.setPrioridade(
			this.<Integer>getColumnOriginalValue("prioridade"));
		solicitacaoServicoImpl.setClientePJId(
			this.<Long>getColumnOriginalValue("clientePJId"));

		return solicitacaoServicoImpl;
	}

	@Override
	public int compareTo(SolicitacaoServico solicitacaoServico) {
		long primaryKey = solicitacaoServico.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof SolicitacaoServico)) {
			return false;
		}

		SolicitacaoServico solicitacaoServico = (SolicitacaoServico)object;

		long primaryKey = solicitacaoServico.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<SolicitacaoServico> toCacheModel() {
		SolicitacaoServicoCacheModel solicitacaoServicoCacheModel =
			new SolicitacaoServicoCacheModel();

		solicitacaoServicoCacheModel.uuid = getUuid();

		String uuid = solicitacaoServicoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			solicitacaoServicoCacheModel.uuid = null;
		}

		solicitacaoServicoCacheModel.solicitacaoId = getSolicitacaoId();

		solicitacaoServicoCacheModel.codigoUnimed = getCodigoUnimed();

		String codigoUnimed = solicitacaoServicoCacheModel.codigoUnimed;

		if ((codigoUnimed != null) && (codigoUnimed.length() == 0)) {
			solicitacaoServicoCacheModel.codigoUnimed = null;
		}

		solicitacaoServicoCacheModel.descricao = getDescricao();

		String descricao = solicitacaoServicoCacheModel.descricao;

		if ((descricao != null) && (descricao.length() == 0)) {
			solicitacaoServicoCacheModel.descricao = null;
		}

		Date dataSolicitacao = getDataSolicitacao();

		if (dataSolicitacao != null) {
			solicitacaoServicoCacheModel.dataSolicitacao =
				dataSolicitacao.getTime();
		}
		else {
			solicitacaoServicoCacheModel.dataSolicitacao = Long.MIN_VALUE;
		}

		solicitacaoServicoCacheModel.status = getStatus();

		solicitacaoServicoCacheModel.prioridade = getPrioridade();

		solicitacaoServicoCacheModel.clientePJId = getClientePJId();

		return solicitacaoServicoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<SolicitacaoServico, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<SolicitacaoServico, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<SolicitacaoServico, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(SolicitacaoServico)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, SolicitacaoServico>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					SolicitacaoServico.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _solicitacaoId;
	private String _codigoUnimed;
	private String _descricao;
	private Date _dataSolicitacao;
	private int _status;
	private int _prioridade;
	private long _clientePJId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<SolicitacaoServico, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((SolicitacaoServico)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("solicitacaoId", _solicitacaoId);
		_columnOriginalValues.put("codigoUnimed", _codigoUnimed);
		_columnOriginalValues.put("descricao", _descricao);
		_columnOriginalValues.put("dataSolicitacao", _dataSolicitacao);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("prioridade", _prioridade);
		_columnOriginalValues.put("clientePJId", _clientePJId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("solicitacaoId", 2L);

		columnBitmasks.put("codigoUnimed", 4L);

		columnBitmasks.put("descricao", 8L);

		columnBitmasks.put("dataSolicitacao", 16L);

		columnBitmasks.put("status", 32L);

		columnBitmasks.put("prioridade", 64L);

		columnBitmasks.put("clientePJId", 128L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private SolicitacaoServico _escapedModel;

}